
(add-to-list 'load-path "~/.emacs.d/packages")
(require 'go-mode-load)

(add-hook 'before-save-hook 'gofmt-before-save)
(add-hook 'go-mode-hook (lambda ()(local-set-key (kbd "C-c i") 'go-goto-imports)))

;; Load JDEE for java
(add-to-list 'load-path "~/.emacs.d/jdee-2.4.1/lisp")
(load "jde")
;; Load other jdee support plugins for java
;;(add-to-list 'load-path "~/.emacs.d/jdee-2.4.1/plugins")
;;(require 'jde-lint) ;; java lint for static code check
;;(require 'jde-findbugs) ;; java findbugs code check
(require 'jde-jalopy)   ;; Java source code formatter beautifier pretty printer


(add-to-list 'load-path "~/.emacs.d/packages/yasnippet-20140810.1626")
(require 'yasnippet) 
(yas-global-mode 1)


(require 'package)
(add-to-list 'package-archives
             '("melpa" . "http://melpa.milkbox.net/packages/") )
(when (< emacs-major-version 24)
  ;; For important compatibility libraries like cl-lib
  (add-to-list 'package-archives '("gnu" . "http://elpa.gnu.org/packages/")))
(package-initialize)
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(inhibit-startup-screen t))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )


(load (expand-file-name "~/quicklisp/slime-helper.el"))
;; Replace "sbcl" with the path to your implementation
(setq inferior-lisp-program "sbcl")



(add-to-list 'load-path "~/color-theme")
(require 'color-theme)
    (color-theme-initialize)
   ;; (color-theme-robin-hood)


;;(load-theme 'monokai t)
(load "~/.emacs.d/user.el")

;; JS file integration into emacs
(add-hook 'js-mode-hook 'js2-minor-mode)
(add-hook 'js2-mode-hook 'ac-js2-mode)

;; if we want to add any other files to js extension
;(add-to-list 'auto-mode-alist '("\\.json$" . js-mode))
(require 'flycheck)
(add-hook 'js-mode-hook
          (lambda () (flycheck-mode t)))
;;
(flycheck-define-checker xml-xmllint
  "A XML syntax checker and validator using the xmllint utility."
  :command ("xmllint" "--noout" source)
  :error-patterns
  ((error line-start (file-name) ":" line ": " (message) line-end))
  :modes (xml-mode nxml-mode))

(flycheck-define-checker xhtml-xmllint
  "A XML syntax checker and validator using the xmllint utility."
  :command ("xmllint" "--noout" source)
  :error-patterns
  ((error line-start (file-name) ":" line ": " (message) line-end))
  :modes (web-mode)
  :next-checkers (html-tidy))

(add-to-list 'flycheck-checkers 'xml-xmllint)
(add-to-list 'flycheck-checkers 'xhtml-xmllint)


;;


;; js2 refactoing load
(require 'js2-refactor)
;; key bindings for refactoring code
(js2r-add-keybindings-with-prefix "C-c C-m")

;;js autocomplete using tern and tern autocomplete package
(add-hook 'js-mode-hook (lambda () (tern-mode t)))
(eval-after-load 'tern
   '(progn
      (require 'tern-auto-complete)
      (tern-ac-setup)))
;;js commit, for node repl mode
(add-to-list 'load-path "~/jscommit/")
(require 'js-comint)
;; if use node.js, we need nice output
(setenv "NODE_NO_READLINE" "1")


;;swank js settings

;; swank-js settings
(add-to-list 'load-path "~/js2-mode.el")
(autoload 'js2-mode "js2-mode" nil t)
(add-to-list 'auto-mode-alist '("\\.js$" . js2-mode))
(global-set-key [f5] 'slime-js-reload)
(add-hook 'js2-mode-hook
          (lambda ()
            (slime-js-minor-mode 1)))
;;(load-file "~/.emacs.d/setup-slime-js.el")

(if (file-directory-p "e:/cygwin/bin")
      (add-to-list 'exec-path "e:/cygwin/bin"))

;; auto complete

(add-to-list 'load-path "~/.emacs.d/")
(require 'auto-complete-config)
(add-to-list 'ac-dictionary-directories "~/.emacs.d/ac-dict")
(ac-config-default)

;; For rainbow parenthesis
(add-to-list 'load-path "~/.emacs.d/elpa/rainbow-delimiters")
(require 'rainbow-delimiters)
(global-rainbow-delimiters-mode)

;; for showing opening and closing parenthesis
(add-to-list 'load-path "~/.emacs.d/elpa/mic-paren")
(require 'mic-paren)
(paren-activate)     ; activating
;To list the possible customizations type `C-h f paren-activate'
